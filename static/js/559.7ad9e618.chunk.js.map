{"version":3,"file":"static/js/559.7ad9e618.chunk.js","mappings":"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","sources":["node_modules/react-native-web/dist/exports/SafeAreaView/index.js","node_modules/react-native-web/dist/exports/TouchableOpacity/index.js","src/styles/welcome.js","src/components/LoginAs.js","src/screens/Welcome.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"style\"];\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nimport canUseDOM from '../../modules/canUseDom';\nvar cssFunction = function () {\n  if (canUseDOM && window.CSS && window.CSS.supports && window.CSS.supports('top: constant(safe-area-inset-top)')) {\n    return 'constant';\n  }\n  return 'env';\n}();\nvar SafeAreaView = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var style = props.style,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, {\n    ref: ref,\n    style: [styles.root, style]\n  }));\n});\nSafeAreaView.displayName = 'SafeAreaView';\nvar styles = StyleSheet.create({\n  root: {\n    paddingTop: cssFunction + \"(safe-area-inset-top)\",\n    paddingRight: cssFunction + \"(safe-area-inset-right)\",\n    paddingBottom: cssFunction + \"(safe-area-inset-bottom)\",\n    paddingLeft: cssFunction + \"(safe-area-inset-left)\"\n  }\n});\nexport default SafeAreaView;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use client';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeOpacity\", \"delayPressIn\", \"delayPressOut\", \"delayLongPress\", \"disabled\", \"focusable\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"rejectResponderTermination\", \"style\"];\nimport * as React from 'react';\nimport { useCallback, useMemo, useState, useRef } from 'react';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePressEvents from '../../modules/usePressEvents';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\n//import { warnOnce } from '../../modules/warnOnce';\n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, dimming it.\n */\nfunction TouchableOpacity(props, forwardedRef) {\n  /*\n  warnOnce(\n    'TouchableOpacity',\n    'TouchableOpacity is deprecated. Please use Pressable.'\n  );\n  */\n\n  var activeOpacity = props.activeOpacity,\n    delayPressIn = props.delayPressIn,\n    delayPressOut = props.delayPressOut,\n    delayLongPress = props.delayLongPress,\n    disabled = props.disabled,\n    focusable = props.focusable,\n    onLongPress = props.onLongPress,\n    onPress = props.onPress,\n    onPressIn = props.onPressIn,\n    onPressOut = props.onPressOut,\n    rejectResponderTermination = props.rejectResponderTermination,\n    style = props.style,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var hostRef = useRef(null);\n  var setRef = useMergeRefs(forwardedRef, hostRef);\n  var _useState = useState('0s'),\n    duration = _useState[0],\n    setDuration = _useState[1];\n  var _useState2 = useState(null),\n    opacityOverride = _useState2[0],\n    setOpacityOverride = _useState2[1];\n  var setOpacityTo = useCallback((value, duration) => {\n    setOpacityOverride(value);\n    setDuration(duration ? duration / 1000 + \"s\" : '0s');\n  }, [setOpacityOverride, setDuration]);\n  var setOpacityActive = useCallback(duration => {\n    setOpacityTo(activeOpacity !== null && activeOpacity !== void 0 ? activeOpacity : 0.2, duration);\n  }, [activeOpacity, setOpacityTo]);\n  var setOpacityInactive = useCallback(duration => {\n    setOpacityTo(null, duration);\n  }, [setOpacityTo]);\n  var pressConfig = useMemo(() => ({\n    cancelable: !rejectResponderTermination,\n    disabled,\n    delayLongPress,\n    delayPressStart: delayPressIn,\n    delayPressEnd: delayPressOut,\n    onLongPress,\n    onPress,\n    onPressStart(event) {\n      var isGrant = event.dispatchConfig != null ? event.dispatchConfig.registrationName === 'onResponderGrant' : event.type === 'keydown';\n      setOpacityActive(isGrant ? 0 : 150);\n      if (onPressIn != null) {\n        onPressIn(event);\n      }\n    },\n    onPressEnd(event) {\n      setOpacityInactive(250);\n      if (onPressOut != null) {\n        onPressOut(event);\n      }\n    }\n  }), [delayLongPress, delayPressIn, delayPressOut, disabled, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination, setOpacityActive, setOpacityInactive]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, pressEventHandlers, {\n    accessibilityDisabled: disabled,\n    focusable: !disabled && focusable !== false,\n    pointerEvents: disabled ? 'box-none' : undefined,\n    ref: setRef,\n    style: [styles.root, !disabled && styles.actionable, style, opacityOverride != null && {\n      opacity: opacityOverride\n    }, {\n      transitionDuration: duration\n    }]\n  }));\n}\nvar styles = StyleSheet.create({\n  root: {\n    transitionProperty: 'opacity',\n    transitionDuration: '0.15s',\n    userSelect: 'none'\n  },\n  actionable: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  }\n});\nvar MemoedTouchableOpacity = /*#__PURE__*/React.memo(/*#__PURE__*/React.forwardRef(TouchableOpacity));\nMemoedTouchableOpacity.displayName = 'TouchableOpacity';\nexport default MemoedTouchableOpacity;","import { StyleSheet, Platform, StatusBar } from \"react-native\";\nimport colors from \"../../config/colors\";\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 200,\n    width: 200,\n    borderRadius: 15,\n    backgroundColor: colors.white,\n    shadowColor: colors.primary,\n    shadowOpacity: 0.2,\n    elevation: 10,\n    alignItems: \"center\",\n    padding: 15,\n  },\n  head: {\n    fontSize: 40,\n    color: colors.primary,\n    fontFamily: \"Poppins_800ExtraBold\",\n  },\n  image: {\n    width: 100, // Adjust as needed\n    height: 100, // Adjust as needed\n    borderRadius: 50, // Should be half of width/height to ensure a circle\n    overflow: \"hidden\",\n  },\n  maincontainer: {\n    flex: 1,\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    flexDirection: \"column\",\n  },\n  txt: {\n    textAlign: \"center\",\n    fontFamily: \"Poppins_500Medium\",\n    color: colors.primary,\n    fontSize: 20,\n  },\n});\n\nexport default styles;\n","import {\n  View,\n  Text,\n  Image,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  Platform,\n} from \"react-native\";\nimport styles from \"../styles/welcome\";\n\nconst LoginAs = ({ role, image, onPress }) => {\n  if (Platform.OS == \"android\") {\n    return (\n      <TouchableNativeFeedback onPress={onPress}>\n        <View style={styles.container}>\n          <Image source={image} resizeMode=\"cover\" style={styles.image} />\n          <Text style={styles.txt}>{role}</Text>\n        </View>\n      </TouchableNativeFeedback>\n    );\n  }\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <View style={styles.container}>\n        <Image style={styles.image} resizeMode=\"contain\" source={image} />\n        <Text style={styles.txt}> {role} </Text>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default LoginAs;\n","import { Text, SafeAreaView } from \"react-native\";\nimport styles from \"../styles/welcome\";\nimport LoginAs from \"../components/LoginAs\";\n\nfunction Welcome({ navigation }) {\n  return (\n    <SafeAreaView style={styles.maincontainer}>\n      <Text style={styles.head}>Login as</Text>\n      <LoginAs\n        role=\"Student\"\n        image={require(\"../../assets/parent1.png\")}\n        onPress={() => navigation.navigate(\"Loginp\")}\n        navigation={navigation}\n      />\n      <LoginAs\n        role=\"Teacher\"\n        image={require(\"../../assets/teacher.png\")}\n        onPress={() => navigation.navigate(\"Logint\")}\n        navigation={navigation}\n      />\n    </SafeAreaView>\n  );\n}\n\nexport default Welcome;\n"],"names":["_excluded","cssFunction","canUseDOM","window","CSS","supports","SafeAreaView","React","props","ref","style","rest","_objectWithoutPropertiesLoose","View","_extends","styles","root","displayName","StyleSheet","create","paddingTop","paddingRight","paddingBottom","paddingLeft","transitionProperty","transitionDuration","userSelect","actionable","cursor","touchAction","MemoedTouchableOpacity","forwardedRef","activeOpacity","delayPressIn","delayPressOut","delayLongPress","disabled","focusable","onLongPress","onPress","onPressIn","onPressOut","rejectResponderTermination","hostRef","useRef","setRef","useMergeRefs","_useState","useState","duration","setDuration","_useState2","opacityOverride","setOpacityOverride","setOpacityTo","useCallback","value","setOpacityActive","setOpacityInactive","pressConfig","useMemo","cancelable","delayPressStart","delayPressEnd","onPressStart","event","isGrant","dispatchConfig","registrationName","type","onPressEnd","pressEventHandlers","usePressEvents","accessibilityDisabled","pointerEvents","undefined","opacity","container","height","width","borderRadius","backgroundColor","colors","white","shadowColor","primary","shadowOpacity","elevation","alignItems","padding","head","fontSize","color","fontFamily","image","overflow","maincontainer","flex","justifyContent","flexDirection","txt","textAlign","LoginAs","role","_jsx","TouchableOpacity","children","_jsxs","Image","resizeMode","source","Text","navigation","require","navigate"],"sourceRoot":""}